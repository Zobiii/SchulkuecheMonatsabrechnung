// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Schulkueche.Data;

#nullable disable

namespace Schulkueche.Data.Migrations
{
    [DbContext(typeof(KitchenDbContext))]
    [Migration("20251001115326_AddCustomMealPrice")]
    partial class AddCustomMealPrice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Schulkueche.Core.AdditionalCharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Month")
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("AdditionalCharges");
                });

            modelBuilder.Entity("Schulkueche.Core.MealOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Delivery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("Date", "PersonId")
                        .IsUnique();

                    b.ToTable("MealOrders");
                });

            modelBuilder.Entity("Schulkueche.Core.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<string>("Contact")
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CustomMealPrice")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DefaultDelivery")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HouseNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Category");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Schulkueche.Core.AdditionalCharge", b =>
                {
                    b.HasOne("Schulkueche.Core.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Schulkueche.Core.MealOrder", b =>
                {
                    b.HasOne("Schulkueche.Core.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
